{
	"info": {
		"_postman_id": "3903913a-b697-4a93-b1f8-056d64ce4507",
		"name": "Your API Documentation",
		"description": "API description",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17108926"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "login",
					"item": [
						{
							"name": "login create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parse the JSON response body",
											"var jsonData = pm.response.json();",
											"",
											"// Check if the response was successful (status code 200) and contains the token key",
											"if (pm.response.code === 200 && jsonData.token) {",
											"",
											"    // Set an environment variable named 'authToken' with the token value",
											"    pm.environment.set(\"authToken\", jsonData.token);",
											"",
											"    console.log(\"Auth token obtained and saved.\"); // Check Postman Console (View -> Show Postman Console) for this message",
											"    pm.test(\"Token was obtained successfully\", true); // Add a test to verify this step passed",
											"",
											"} else {",
											"    // If login failed or token not found, log an error and mark the test as failed",
											"    console.error(\"Failed to obtain token or token not found in response. Status:\", pm.response.code, \"Response Body:\", pm.response.text()); // Use pm.response.text() to avoid errors if response is not valid JSON",
											"    pm.test(\"Token was obtained successfully\", false); // Fail the test",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "sessionid",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username_or_email\": \"mjd\",\n    \"password\": \"mjd\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sessionid",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"veniam Excepteur in qui\",\n  \"username_or_email\": \"sunt veniam\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"username_or_email\": \"tempor eiusmod velit deserunt qui\",\n  \"password\": -65216212.5582469\n}"
								}
							]
						}
					]
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "logout create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test to check for a successful status code (e.g., 200 or 204)",
											"pm.test(\"Logout successful (Status 2xx)\", function () {",
											"    pm.response.to.be.oneOf([200, 201, 204]); // Adjust these codes based on your API's success response",
											"});",
											"// Only run this test if the response has a body and is likely JSON",
											"if (pm.response.text() && pm.response.text().trim().startsWith('{')) {",
											"    try {",
											"         var jsonData = pm.response.json();",
											"         pm.test(\"Response body contains success message\", function () {",
											"             // Adjust 'message' and \"Logged out successfully\" based on your API's response",
											"             pm.expect(jsonData.message).to.equal(\"Successfully logged out.\");",
											"         });",
											"    } catch (e) {",
											"        console.log(\"Could not parse JSON for logout success message test:\", e);",
											"        // Optional: pm.test(\"Response body contains success message\", false); // Uncomment to fail the test if JSON parsing fails",
											"    }",
											"} else {",
											"    // Optional: Log if no JSON body was received for this test",
											"    // console.log(\"No JSON body received for logout success message test.\");",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Token {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/logout/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"logout",
										""
									]
								}
							},
							"response": [
								{
									"name": "No response body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "sessionid",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/logout/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"logout",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "register",
					"item": [
						{
							"name": "register create",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "sessionid",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"gtB4TAYLk95@JtHbVwueKZS.jbr\",\n  \"password\": \"nisi laboris ex qui\",\n  \"password2\": \"eu et\",\n  \"username\": \"xWPq.m\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										""
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sessionid",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"gtB4TAYLk95@JtHbVwueKZS.jbr\",\n  \"password\": \"nisi laboris ex qui\",\n  \"password2\": \"eu et\",\n  \"username\": \"xWPq.m\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/register/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"iN1ajQbxxUUX@sukbfOzESPIeZrbiYI.qdim\",\n  \"username\": \"jWAR\",\n  \"password\": \"tempor Duis\",\n  \"password2\": 59801193\n}"
								}
							]
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "user retrieve",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response body is valid JSON\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"// Test to check if the response body is valid JSON and contains expected keys",
											"try {",
											"    // Attempt to parse the response body as JSON",
											"    var jsonData = pm.response.json();",
											"",
											"    // If parsing succeeds, add tests for the JSON data",
											"    pm.test(\"Response body is valid JSON\", function () {",
											"        pm.expect(jsonData).to.be.an('object'); // Checks if the parsed data is a JSON object",
											"    });",
											"",
											"    // Check if a specific key (like 'email') exists in the JSON data",
											"    pm.test(\"Response body has 'email' key\", function () {",
											"        pm.expect(jsonData.email).to.exist; // Checks if the 'email' key exists and is not null/undefined",
											"    });",
											"",
											"    // Add more tests here as needed, for example:",
											"    // pm.test(\"User email is a string\", function () {",
											"    //     pm.expect(jsonData.email).to.be.a('string'); // Checks if the value of 'email' is a string",
											"    // });",
											"    // pm.test(\"User has 'username' key\", function () {",
											"    //     pm.expect(jsonData.username).to.exist;",
											"    // });",
											"",
											"} catch (e) {",
											"    // If parsing fails, mark the JSON validity test as failed and log the error",
											"    pm.test(\"Response body is valid JSON\", false);",
											"    console.error(\"Error parsing JSON response or running JSON tests:\", e);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disableCookies": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Token {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sessionid",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"iN1ajQbxxUUX@sukbfOzESPIeZrbiYI.qdim\",\n  \"username\": \"jWAR\",\n  \"password\": \"tempor Duis\",\n  \"password2\": 59801193\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}